// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HillarysHairCare.Migrations
{
    [DbContext(typeof(HillarysHairCareDbContext))]
    partial class HillarysHairCareDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HillarysHairCare.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsCanceled")
                        .HasColumnType("boolean");

                    b.Property<int>("StylistId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("StylistId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppointmentDate = new DateTime(2025, 10, 20, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 1,
                            IsCanceled = false,
                            StylistId = 1
                        },
                        new
                        {
                            Id = 2,
                            AppointmentDate = new DateTime(2025, 10, 20, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 2,
                            IsCanceled = false,
                            StylistId = 2
                        },
                        new
                        {
                            Id = 3,
                            AppointmentDate = new DateTime(2025, 10, 21, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 3,
                            IsCanceled = true,
                            StylistId = 1
                        },
                        new
                        {
                            Id = 4,
                            AppointmentDate = new DateTime(2025, 10, 22, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 4,
                            IsCanceled = false,
                            StylistId = 4
                        },
                        new
                        {
                            Id = 5,
                            AppointmentDate = new DateTime(2025, 10, 22, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 5,
                            IsCanceled = false,
                            StylistId = 5
                        },
                        new
                        {
                            Id = 6,
                            AppointmentDate = new DateTime(2025, 10, 23, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 6,
                            IsCanceled = false,
                            StylistId = 6
                        },
                        new
                        {
                            Id = 7,
                            AppointmentDate = new DateTime(2025, 10, 23, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 7,
                            IsCanceled = false,
                            StylistId = 7
                        },
                        new
                        {
                            Id = 8,
                            AppointmentDate = new DateTime(2025, 10, 24, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 8,
                            IsCanceled = true,
                            StylistId = 1
                        });
                });

            modelBuilder.Entity("HillarysHairCare.Models.AppointmentService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AppointmentId")
                        .HasColumnType("integer");

                    b.Property<int>("ServiceId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId");

                    b.HasIndex("ServiceId");

                    b.ToTable("AppointmentServices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppointmentId = 1,
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 2,
                            AppointmentId = 1,
                            ServiceId = 4
                        },
                        new
                        {
                            Id = 3,
                            AppointmentId = 2,
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 4,
                            AppointmentId = 2,
                            ServiceId = 5
                        },
                        new
                        {
                            Id = 5,
                            AppointmentId = 3,
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 6,
                            AppointmentId = 4,
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 7,
                            AppointmentId = 4,
                            ServiceId = 5
                        },
                        new
                        {
                            Id = 8,
                            AppointmentId = 5,
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 9,
                            AppointmentId = 5,
                            ServiceId = 4
                        },
                        new
                        {
                            Id = 10,
                            AppointmentId = 6,
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 11,
                            AppointmentId = 7,
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 12,
                            AppointmentId = 8,
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 13,
                            AppointmentId = 8,
                            ServiceId = 3
                        });
                });

            modelBuilder.Entity("HillarysHairCare.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "john.smith@example.com",
                            FirstName = "John",
                            LastName = "Smith",
                            PhoneNumber = "615-555-0101"
                        },
                        new
                        {
                            Id = 2,
                            Email = "emma.davis@example.com",
                            FirstName = "Emma",
                            LastName = "Davis",
                            PhoneNumber = "615-555-0102"
                        },
                        new
                        {
                            Id = 3,
                            Email = "michael.brown@example.com",
                            FirstName = "Michael",
                            LastName = "Brown",
                            PhoneNumber = "615-555-0103"
                        },
                        new
                        {
                            Id = 4,
                            Email = "sophia.garcia@example.com",
                            FirstName = "Sophia",
                            LastName = "Garcia",
                            PhoneNumber = "615-555-0104"
                        },
                        new
                        {
                            Id = 5,
                            Email = "william.miller@example.com",
                            FirstName = "William",
                            LastName = "Miller",
                            PhoneNumber = "615-555-0105"
                        },
                        new
                        {
                            Id = 6,
                            Email = "olivia.taylor@example.com",
                            FirstName = "Olivia",
                            LastName = "Taylor",
                            PhoneNumber = "615-555-0106"
                        },
                        new
                        {
                            Id = 7,
                            Email = "james.anderson@example.com",
                            FirstName = "James",
                            LastName = "Anderson",
                            PhoneNumber = "615-555-0107"
                        },
                        new
                        {
                            Id = 8,
                            Email = "isabella.thomas@example.com",
                            FirstName = "Isabella",
                            LastName = "Thomas",
                            PhoneNumber = "615-555-0108"
                        },
                        new
                        {
                            Id = 9,
                            Email = "benjamin.jackson@example.com",
                            FirstName = "Benjamin",
                            LastName = "Jackson",
                            PhoneNumber = "615-555-0109"
                        },
                        new
                        {
                            Id = 10,
                            Email = "mia.white@example.com",
                            FirstName = "Mia",
                            LastName = "White",
                            PhoneNumber = "615-555-0110"
                        },
                        new
                        {
                            Id = 11,
                            Email = "lucas.harris@example.com",
                            FirstName = "Lucas",
                            LastName = "Harris",
                            PhoneNumber = "615-555-0111"
                        },
                        new
                        {
                            Id = 12,
                            Email = "charlotte.martin@example.com",
                            FirstName = "Charlotte",
                            LastName = "Martin",
                            PhoneNumber = "615-555-0112"
                        },
                        new
                        {
                            Id = 13,
                            Email = "henry.thompson@example.com",
                            FirstName = "Henry",
                            LastName = "Thompson",
                            PhoneNumber = "615-555-0113"
                        },
                        new
                        {
                            Id = 14,
                            Email = "amelia.moore@example.com",
                            FirstName = "Amelia",
                            LastName = "Moore",
                            PhoneNumber = "615-555-0114"
                        },
                        new
                        {
                            Id = 15,
                            Email = "alexander.lee@example.com",
                            FirstName = "Alexander",
                            LastName = "Lee",
                            PhoneNumber = "615-555-0115"
                        });
                });

            modelBuilder.Entity("HillarysHairCare.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Basic haircut and style",
                            Name = "Haircut",
                            Price = 45.00m
                        },
                        new
                        {
                            Id = 2,
                            Description = "Full hair coloring service",
                            Name = "Color",
                            Price = 120.00m
                        },
                        new
                        {
                            Id = 3,
                            Description = "Partial highlights",
                            Name = "Highlights",
                            Price = 85.00m
                        },
                        new
                        {
                            Id = 4,
                            Description = "Beard shaping and trim",
                            Name = "Beard Trim",
                            Price = 25.00m
                        },
                        new
                        {
                            Id = 5,
                            Description = "Deep conditioning treatment",
                            Name = "Deep Conditioning",
                            Price = 35.00m
                        });
                });

            modelBuilder.Entity("HillarysHairCare.Models.Stylist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Stylists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Sarah",
                            IsActive = true,
                            LastName = "Johnson"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Mike",
                            IsActive = true,
                            LastName = "Chen"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Emily",
                            IsActive = false,
                            LastName = "Rodriguez"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Jessica",
                            IsActive = true,
                            LastName = "Martinez"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "David",
                            IsActive = true,
                            LastName = "Thompson"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Amanda",
                            IsActive = true,
                            LastName = "Wilson"
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "Kevin",
                            IsActive = true,
                            LastName = "Anderson"
                        });
                });

            modelBuilder.Entity("HillarysHairCare.Models.Appointment", b =>
                {
                    b.HasOne("HillarysHairCare.Models.Customer", "Customer")
                        .WithMany("Appointments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HillarysHairCare.Models.Stylist", "Stylist")
                        .WithMany("Appointments")
                        .HasForeignKey("StylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Stylist");
                });

            modelBuilder.Entity("HillarysHairCare.Models.AppointmentService", b =>
                {
                    b.HasOne("HillarysHairCare.Models.Appointment", "Appointment")
                        .WithMany("AppointmentServices")
                        .HasForeignKey("AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HillarysHairCare.Models.Service", "Service")
                        .WithMany("AppointmentServices")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Appointment");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("HillarysHairCare.Models.Appointment", b =>
                {
                    b.Navigation("AppointmentServices");
                });

            modelBuilder.Entity("HillarysHairCare.Models.Customer", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("HillarysHairCare.Models.Service", b =>
                {
                    b.Navigation("AppointmentServices");
                });

            modelBuilder.Entity("HillarysHairCare.Models.Stylist", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
